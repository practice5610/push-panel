{
    "version": 3,
    "sources": [
        "url.js",
        "dataProvider/session.js",
        "dashboard/index.js",
        "lists/reports.jsx",
        "lists/templates.jsx",
        "dataProvider/getReportList.js",
        "dataProvider/getStieList.js",
        "dataProvider/getTemplateList.js",
        "dataProvider/createTemplate.js",
        "dataProvider/deleteTemplate.js",
        "dataProvider/index.js",
        "authProvider/login.js",
        "authProvider/index.js",
        "lists/sites.jsx",
        "sendNotification/index.js",
        "integrate/index.js",
        "changePassword.js",
        "creates/createTemplate.jsx",
        "lists/schedule.jsx",
        "App.js",
        "reportWebVitals.js",
        "index.js"
    ],
    "names": [
        "getHeader",
        "contentType",
        "header",
        "id",
        "localStorage",
        "getItem",
        "key",
        "theHeader",
        "Headers",
        "k",
        "append",
        "Dashboard",
        "useState",
        "todaysofar",
        "setTodaysofar",
        "yesterday",
        "setyesterday",
        "last7days",
        "setlast7days",
        "thisMonth",
        "setThisMonth",
        "totaltokens",
        "setTotaltokens",
        "topsites",
        "setTopsites",
        "last10dayarray",
        "setLast10dayarray",
        "thedata",
        "forEach",
        "site",
        "theday",
        "Date",
        "createdAt",
        "push",
        "toDateString",
        "tokens",
        "topSitesData",
        "sitename",
        "useEffect",
        "a",
        "fetch",
        "API_URL",
        "method",
        "headers",
        "response",
        "json",
        "resBody",
        "gToday",
        "data",
        "console",
        "log",
        "className",
        "class",
        "width",
        "height",
        "viewBox",
        "fill",
        "xmlns",
        "d",
        "style",
        "display",
        "margin",
        "config",
        "x",
        "charts",
        "type",
        "y",
        "color",
        "colorDomain",
        "maxLength",
        "legend",
        "metadata",
        "names",
        "types",
        "onClick",
        "mode",
        "CountryList",
        "props",
        "PostFilter",
        "Filter",
        "SearchInput",
        "source",
        "alwaysOn",
        "List",
        "filters",
        "Datagrid",
        "ImageField",
        "TextField",
        "TemplateList",
        "redirect",
        "setRedirect",
        "clusters",
        "setClusters",
        "body",
        "countClusters",
        "refresh",
        "useRefresh",
        "AutoSendSwitch",
        "record",
        "userIds",
        "state",
        "JSON",
        "stringify",
        "autosend",
        "Switch",
        "checked",
        "inputProps",
        "onChange",
        "e",
        "block",
        "_id",
        "target",
        "SendNotificationButton",
        "Button",
        "variant",
        "title",
        "url",
        "imgurIconUrl",
        "icon",
        "imgurImageUrl",
        "image",
        "skipSites",
        "to",
        "resource",
        "params",
        "requestParams",
        "sort",
        "field",
        "sortBy",
        "sortingOrder",
        "order",
        "filter",
        "q",
        "pagination",
        "urlEncodedParams",
        "encodeURIComponent",
        "serverResponse",
        "err",
        "map",
        "value",
        "modified",
        "messageDetails",
        "clicked",
        "impressions",
        "toFixed",
        "getReports",
        "getSites",
        "getTemplates",
        "template",
        "formData",
        "FormData",
        "obj",
        "rawFile",
        "responseBody",
        "createTemplate",
        "deleteTemplate",
        "customDataProvider",
        "this",
        "ids",
        "username",
        "password",
        "request",
        "Request",
        "sersverResponse",
        "status",
        "Promise",
        "reject",
        "Error",
        "statusText",
        "setItem",
        "resolve",
        "login",
        "MyAuthProvider",
        "user",
        "error",
        "removeItem",
        "clear",
        "siteList",
        "SendNotification",
        "setTitle",
        "setBody",
        "link",
        "setLink",
        "setIcon",
        "setImage",
        "sites",
        "setSites",
        "totalClusters",
        "setTotalClusters",
        "Array",
        "length",
        "checkedState",
        "setCheckedState",
        "isLimitChangable",
        "setIsLimitChangable",
        "isSiteSelectable",
        "setIsSiteSelectable",
        "isIgnoreListChangable",
        "setIsIgnoreListChangable",
        "subRoute",
        "setSubRoute",
        "setSiteName",
        "Eclipse",
        "size",
        "marginTop",
        "onSubmit",
        "preventDefault",
        "ignoreList",
        "reduce",
        "current",
        "index",
        "then",
        "alert",
        "for",
        "placeholder",
        "files",
        "thetotalClusters",
        "name",
        "min",
        "max",
        "findTheSite",
        "position",
        "updatedCheckedState",
        "item",
        "handleOnChange",
        "htmlFor",
        "Integrate",
        "paddingTop",
        "href",
        "ChangePassword",
        "oldPassword",
        "setOldPassword",
        "setPassword",
        "buttonClicked",
        "setButtonClicked",
        "setError",
        "resbody",
        "newPassword",
        "changePass",
        "required",
        "CreateTemplate",
        "Create",
        "SimpleForm",
        "TextInput",
        "CheckboxGroupInput",
        "choices",
        "FileInput",
        "label",
        "accept",
        "FileField",
        "Schedule",
        "from",
        "setFrom",
        "setTo",
        "interval",
        "setTheInterval",
        "submitted",
        "setSubmitted",
        "getStuffs",
        "Title",
        "disabled",
        "Number",
        "dp",
        "custmDataProvider",
        "getList",
        "myap",
        "App",
        "Admin",
        "dataProvider",
        "authProvider",
        "dashboard",
        "Resource",
        "list",
        "WebIcon",
        "ReportList",
        "AssessmentIcon",
        "create",
        "ExtensionIcon",
        "NotificationsActiveIcon",
        "MoreTimeIcon",
        "RepeatOneOnIcon",
        "AccountBoxIcon",
        "reportWebVitals",
        "onPerfEntry",
        "Function",
        "getCLS",
        "getFID",
        "getFCP",
        "getLCP",
        "getTTFB",
        "ReactDOM",
        "render",
        "StrictMode",
        "document",
        "getElementById"
    ],
    "mappings": "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",
    "file": "static/js/main.a27d520c.chunk.js",
    "sourcesContent": [
        "//export default \"http://localhost:8000/api\";\nexport default \"https://push.gotiking.com/api\";\n",
        "export function getHeader(contentType) {\n  let header = {};\n  header.id = localStorage.getItem(\"id\");\n  header.key = localStorage.getItem(\"key\");\n  if (!header.id || !header.key) {\n    return;\n  }\n  let theHeader = new Headers();\n\n  for (var k in header) {\n    theHeader.append(k, header[k]);\n  }\n\n  if (!contentType) {\n    theHeader.append(\"Content-Type\", \"application/json\");\n  }\n  //} else {\n  //theHeader.append(\"Content-Type\", contentType);\n  //console.log(\"idiot\", theHeader);\n  //}\n\n  return theHeader;\n}\n\nexport function setHeader(header) {\n  localStorage.setItem(\"id\", header.id);\n  localStorage.setItem(\"key\", header.key);\n}\n\nexport function deleteHeader() {\n  localStorage.clear();\n  return;\n}\n",
        "import React, { useState, useEffect } from \"react\";\nimport VizG from \"react-vizgrammar\";\nimport { getHeader } from \"../dataProvider/session\";\n//const API_URL = \"https://allinonepush.live/api\";\nimport API_URL from \"../url\";\n\nexport default function Dashboard() {\n  //tokens counts:number\n  const [todaysofar, setTodaysofar] = useState(0);\n  const [yesterday, setyesterday] = useState(0);\n  const [last7days, setlast7days] = useState(0);\n  const [thisMonth, setThisMonth] = useState(0);\n\n  const [totaltokens, setTotaltokens] = useState(0);\n\n  //arrays of token/other counts: Array\n  const [topsites, setTopsites] = useState([]);\n  const [last10dayarray, setLast10dayarray] = useState([]);\n\n  //test\n  let config = {\n    x: \"Day\",\n    charts: [\n      {\n        type: \"line\",\n        y: \"Tokens\",\n        color: \"axisName\",\n        colorDomain: [\"\", \"\", \"\"],\n        fill: \"#000\",\n      },\n    ],\n    maxLength: 7,\n    legend: true,\n  };\n  let metadata = {\n    names: [\"Day\", \"Tokens\", \"axisName\"],\n    types: [\"linear\", \"linear\", \"linear\"],\n  };\n\n  let thedata = [];\n\n  last10dayarray.forEach((site) => {\n    let theday = new Date(site.createdAt);\n    thedata.push([theday.toDateString(), site.tokens, \"Tokens\"]);\n  });\n\n  //top sites\n  let topSitesConfig = {\n    charts: [\n      {\n        type: \"arc\",\n        x: \"tokens\",\n        color: \"sitename\",\n        mode: \"pie\",\n      },\n    ],\n    //legendOrientation: \"top\",\n    legend: true,\n  };\n\n  let topSitesMetadata = {\n    names: [\"tokens\", \"sitename\"],\n    types: [\"linear\", \"linear\"],\n  };\n  let topSitesData = [];\n\n  topsites.forEach((site) => {\n    topSitesData.push([site.tokens, site.sitename]);\n  });\n\n  useEffect(async () => {\n    //declaring a response var and body var\n    let response;\n    let resBody;\n\n    //todaysofar\n    response = await fetch(`${API_URL}/admin/counttokenswithin/1`, {\n      method: \"GET\",\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    setTodaysofar(resBody.tokens);\n\n    //yesterday by calculating and substracting today\n    let gToday = resBody.tokens;\n    response = await fetch(`${API_URL}/admin/counttokenswithin/2`, {\n      method: \"GET\",\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    setyesterday(resBody.tokens - gToday);\n\n    //last 7 days\n    response = await fetch(`${API_URL}/admin/counttokenswithin/7`, {\n      method: \"GET\",\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    setlast7days(resBody.tokens);\n\n    //this month\n    response = await fetch(`${API_URL}/admin/counttokenswithin/30`, {\n      method: \"GET\",\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    setThisMonth(resBody.tokens);\n\n    //total Tokens\n    response = await fetch(`${API_URL}/admin/counttokenswithin/all`, {\n      method: \"GET\",\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    setTotaltokens(resBody.tokens);\n\n    //fetching array datas\n    //topsites\n    response = await fetch(\n      `${API_URL}/admin/sites?perPage=5&page=1&sortBy=tokens&sortingOrder=DSC`,\n      {\n        headers: getHeader(),\n      }\n    );\n    resBody = await response.json();\n    setTopsites(resBody.data);\n\n    //last10day\n    response = await fetch(`${API_URL}/admin/tokenswithin/10`, {\n      headers: getHeader(),\n    });\n    resBody = await response.json();\n    console.log(resBody);\n    setLast10dayarray(resBody);\n  }, []);\n\n  //retrive all the data\n\n  return (\n    <div className=\"container py-5\">\n      <div class=\"row\">\n        <div class=\"col-md-8 py-3 border-n mx-1 my-2 text-white bg-primary\">\n          <div class=\"row py-2\">\n            <div class=\"col-md-11 text_col1\">\n              <h5>Estimated Tokens</h5>\n            </div>\n            <div class=\"col-md-1 text_col2\">\n              <svg\n                width=\"1.5em\"\n                height=\"2em\"\n                viewBox=\"0 0 16 16\"\n                class=\"bi bi-three-dots-vertical\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n                />\n              </svg>\n            </div>\n          </div>\n          <div class=\"row py-2\">\n            <div class=\"col-md-3 box_col\">\n              <p>Today so far</p>\n              <h3>TK {todaysofar}</h3>\n            </div>\n            <div class=\"col-md-3 box_col\">\n              <p>Yesterday</p>\n              <h3>TK {yesterday}</h3>\n            </div>\n            <div class=\"col-md-3 box_col\">\n              <p>Last 7 days</p>\n              <h3>TK {last7days}</h3>\n            </div>\n            <div class=\"col-md-3 box_col\">\n              <p>This month</p>\n              <h3>TK {thisMonth}</h3>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3 py-3 border-n mx-1 my-2 text-white bg-primary\">\n          <div class=\"row py-2\">\n            <div class=\"col-md-10 text_col1\">\n              <h5>Tokens</h5>\n            </div>\n            <div class=\"col-md-1 text_col2\">\n              <svg\n                width=\"1.5em\"\n                height=\"2em\"\n                viewBox=\"0 0 16 16\"\n                class=\"bi bi-three-dots-vertical\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"\n                />\n              </svg>\n            </div>\n          </div>\n          <div class=\"row py-2\">\n            <div class=\"col-md-12\">\n              <p>Total Tokens</p>\n              <h3>TK {totaltokens}</h3>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"card\" style={{ display: \"block\", margin: \"10px auto\" }}>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Per Day Stats</h5>\n            <VizG\n              config={config}\n              data={thedata}\n              metadata={metadata}\n              onClick={(data) => {\n                /* function to perform */\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"card\" style={{ display: \"block\", margin: \"10px auto\" }}>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Top 5 Websites Stats</h5>\n            <VizG\n              config={topSitesConfig}\n              data={topSitesData}\n              metadata={topSitesMetadata}\n              onClick={(data) => {\n                /* function to perform */\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
        "import React from \"react\";\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Filter,\n  SearchInput,\n  ImageField,\n} from \"react-admin\";\n\nexport default function CountryList(props) {\n  const PostFilter = (props) => (\n    <Filter {...props}>\n      <SearchInput source=\"q\" alwaysOn />\n    </Filter>\n  );\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <ImageField source=\"icon\" />\n        <TextField source=\"title\" />\n        <TextField source=\"body\" />\n        <TextField source=\"url\" />\n\n        <TextField source=\"createdAt\" />\n      </Datagrid>\n    </List>\n  );\n}\n",
        "import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport API_URL from \"../url\";\nimport { getHeader } from \"../dataProvider/session.js\";\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Filter,\n  SearchInput,\n  ImageField,\n  useRefresh,\n} from \"react-admin\";\nimport { useEffect } from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport default function TemplateList(props) {\n  const [redirect, setRedirect] = useState(\"\");\n  const [clusters, setClusters] = useState(1);\n\n  useEffect(async () => {\n    const response = await fetch(`${API_URL}/admin/sites`, {\n      headers: getHeader(),\n    });\n    const body = await response.json();\n    let countClusters = 0;\n    console.log(body);\n    body.data.forEach((site) => {\n      countClusters += site.clusters;\n    });\n    console.log(countClusters);\n    setClusters(countClusters);\n  }, []);\n\n  const refresh = useRefresh();\n\n  const PostFilter = (props) => (\n    <Filter {...props}>\n      <SearchInput source=\"q\" alwaysOn />\n    </Filter>\n  );\n\n  const AutoSendSwitch = ({ record }) => {\n    async function block(userIds, state) {\n      await fetch(`${API_URL}/admin/templates/${userIds[0]}`, {\n        method: \"PATCH\",\n        headers: getHeader(),\n        body: JSON.stringify({ autosend: state }),\n      });\n      refresh();\n    }\n    return (\n      <Switch\n        color=\"secondary\"\n        checked={record.autosend == true}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        onChange={(e) => block([record._id], e.target.checked)}\n      />\n    );\n  };\n\n  const SendNotificationButton = ({ record }) => (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={async () => {\n        const response = await fetch(`${API_URL}/admin/sendnotification`, {\n          method: \"POST\",\n          headers: getHeader(),\n          body: JSON.stringify({\n            title: record.title,\n            body: record.body,\n            url: record.url,\n            imgurIconUrl: record.icon,\n            imgurImageUrl: record.image,\n            clusters: clusters,\n            skipSites: record.skipSites,\n          }),\n        });\n\n        setRedirect(\"/Reports\");\n      }}\n    >\n      Send\n    </Button>\n  );\n\n  //redirections\n  if (redirect !== \"\") {\n    return <Redirect to={redirect} />;\n  }\n\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <ImageField source=\"icon\" />\n        <TextField source=\"title\" />\n        <TextField source=\"body\" />\n        <TextField source=\"url\" />\n        <SendNotificationButton />\n        <AutoSendSwitch />\n      </Datagrid>\n    </List>\n  );\n}\n",
        "import { getHeader } from \"./session\";\n\nasync function getReports(API_URL, resource, params) {\n  console.log(params);\n  //defining the params object\n  let requestParams = {};\n\n  //sortings\n  if (params.sort.field !== \"id\") {\n    requestParams.sortBy = params.sort.field;\n    requestParams.sortingOrder = params.sort.order;\n  }\n\n  //searching\n  if (params.filter.q) {\n    requestParams.q = params.filter.q;\n  }\n\n  //pagination\n  requestParams = { ...requestParams, ...params.pagination };\n  let urlEncodedParams = \"\";\n  var key;\n  for (key in requestParams) {\n    urlEncodedParams +=\n      encodeURIComponent(key) +\n      \"=\" +\n      encodeURIComponent(requestParams[key]) +\n      \"&\";\n  }\n\n  //making the request\n  const url = `${API_URL}/admin/notifications?${urlEncodedParams}`;\n  const serverResponse = await fetch(url, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  //changing _id to id\n  resBody.data = resBody.data.map((value) => {\n    let modified = { ...value };\n    modified.id = value._id;\n    modified.messageDetails = `Title: ${value.title} \\n \n    Body: ${value.body}`;\n    if (modified.clicked === 0) {\n      modified.clicked = `${modified.clicked} (0%)`;\n    } else {\n      modified.clicked = `${modified.clicked} (${(\n        (value.clicked / value.impressions) *\n        100\n      ).toFixed(2)}%)`;\n    }\n    return modified;\n  });\n  return resBody;\n}\n\nexport default getReports;\n",
        "import { getHeader } from \"./session\";\n\nasync function getSites(API_URL, resource, params) {\n  //defining the params object\n  let requestParams = {};\n\n  //sortings\n  if (params.sort.field !== \"id\") {\n    requestParams.sortBy = params.sort.field;\n    requestParams.sortingOrder = params.sort.order;\n  }\n\n  //searching\n  if (params.filter.q) {\n    requestParams.q = params.filter.q;\n  }\n\n  //pagination\n  requestParams = { ...requestParams, ...params.pagination };\n  let urlEncodedParams = \"\";\n  var key;\n  for (key in requestParams) {\n    urlEncodedParams +=\n      encodeURIComponent(key) +\n      \"=\" +\n      encodeURIComponent(requestParams[key]) +\n      \"&\";\n  }\n\n  //making the request\n  const url = `${API_URL}/admin/sites?${urlEncodedParams}`;\n  const serverResponse = await fetch(url, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  //changing _id to id\n  resBody.data = resBody.data.map((value) => {\n    let modified = { ...value };\n    modified.id = value._id;\n    return modified;\n  });\n  return resBody;\n}\n\nexport default getSites;\n",
        "import { getHeader } from \"./session\";\n\nasync function getTemplates(API_URL, resource, params) {\n  console.log(params);\n  //defining the params object\n  let requestParams = {};\n\n  //sortings\n  if (params.sort.field !== \"id\") {\n    requestParams.sortBy = params.sort.field;\n    requestParams.sortingOrder = params.sort.order;\n  }\n\n  //searching\n  if (params.filter.q) {\n    requestParams.q = params.filter.q;\n  }\n\n  //pagination\n  requestParams = { ...requestParams, ...params.pagination };\n  let urlEncodedParams = \"\";\n  var key;\n  for (key in requestParams) {\n    urlEncodedParams +=\n      encodeURIComponent(key) +\n      \"=\" +\n      encodeURIComponent(requestParams[key]) +\n      \"&\";\n  }\n\n  //making the request\n  const url = `${API_URL}/admin/templates?${urlEncodedParams}`;\n  const serverResponse = await fetch(url, {\n    method: \"GET\",\n    headers: getHeader(),\n  });\n  const resBody = await serverResponse.json();\n  if (resBody.err) {\n    console.log(resBody);\n  }\n  console.log(resBody);\n\n  //changing _id to id\n  resBody.data = resBody.data.map((value) => {\n    let modified = { ...value };\n    modified.id = value._id;\n    return modified;\n  });\n  return resBody;\n}\n\nexport default getTemplates;\n",
        "import { getHeader } from \"./session\";\n\nasync function createTemplate(API_URL, params) {\n  console.log(\"function gets called\", params);\n  let template = params.data;\n  let url = `${API_URL}/admin/templates`;\n\n  console.log(template);\n\n  const formData = new FormData();\n\n  const obj = {\n    title: template.title,\n    body: template.body,\n    url: template.url,\n    icon: template?.icon?.rawFile,\n    image: template?.image?.rawFile,\n    skipSites: template.skipSites,\n  };\n\n  var key;\n  for (key in obj) {\n    formData.append(key, obj[key]);\n  }\n\n  const response = await fetch(API_URL + \"/admin/templates\", {\n    headers: getHeader(\"multipart/form-data\"),\n    method: \"POST\",\n    body: formData,\n  });\n\n  const responseBody = await response.json();\n  console.log(responseBody);\n\n  template.id = responseBody._id;\n\n  return { data: template };\n}\n\nexport default createTemplate;\n",
        "import { getHeader } from \"./session\";\n\nasync function deleteTemplate(API_URL, params) {\n  const response = await fetch(`${API_URL}/admin/templates/${params.id}`, {\n    method: \"DELETE\",\n    headers: getHeader(),\n  });\n  await response.json();\n  return { data: [] };\n}\n\nexport default deleteTemplate;\n",
        "import { getHeader } from \"./session\";\nimport getReports from \"./getReportList\";\nimport getSites from \"./getStieList\";\nimport getTemplates from \"./getTemplateList\";\nimport createTemplate from \"./createTemplate\";\nimport deleteTemplate from \"./deleteTemplate\";\n\nexport default class customDataProvider {\n  constructor(API_URL) {\n    this.API_URL = API_URL;\n  }\n  getList(resource, params) {\n    try {\n      if (resource === \"Reports\") {\n        return getReports(this.API_URL, resource, params);\n      }\n      if (resource === \"Templates\") {\n        return getTemplates(this.API_URL, resource, params);\n      }\n      if (resource === \"Sites\") {\n        return getSites(this.API_URL, resource, params);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getOne(resource, params) {\n    try {\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async getMany() {}\n  getManyReference() {}\n  create(resource, params) {\n    return createTemplate(this.API_URL, params);\n  }\n  async update(resource, params) {\n    try {\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  updateMany() {}\n  delete(resource, params) {\n    return deleteTemplate(this.API_URL, params);\n  }\n  async deleteMany(resource, params) {\n    try {\n      await params.ids.forEach(async (id) => {\n        await deleteTemplate(this.API_URL, { id: id });\n      });\n\n      return { data: [] };\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n",
        "async function login(API_URL, { username, password }) {\n  const request = new Request(API_URL + \"/auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username: username,\n      password: password,\n    }),\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n  });\n  let sersverResponse = await fetch(request);\n  if (sersverResponse.status < 200 || sersverResponse.status >= 300) {\n    return Promise.reject(Error(sersverResponse.statusText));\n  }\n  let body = await sersverResponse.json();\n\n  console.log(\"the server responded with:\", body);\n\n  if (body.err) {\n    return Promise.reject();\n  }\n\n  localStorage.setItem(\"id\", body.id);\n  localStorage.setItem(\"key\", body.key);\n  localStorage.setItem(\"privillage\", \"admin\");\n\n  return Promise.resolve();\n}\n\nexport default login;\n",
        "import login from \"./login\";\n\nclass MyAuthProvider {\n  constructor(API_URL) {\n    this.API_URL = API_URL;\n  }\n  login(user) {\n    return login(this.API_URL, user);\n  }\n  checkError(error) {\n    const status = error.status;\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"id\");\n      localStorage.removeItem(\"key\");\n      return Promise.reject();\n    }\n    // other error code (404, 500, etc): no need to log out\n    return Promise.resolve();\n  }\n  checkAuth() {\n    if (localStorage.getItem(\"id\") && localStorage.getItem(\"key\")) {\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n  logout() {\n    localStorage.clear();\n    return Promise.resolve();\n  }\n  getIdentity() {}\n  async getPermissions() {\n    if (localStorage.getItem(\"privillage\") === \"admin\") {\n      return Promise.resolve();\n    }\n    return Promise.reject();\n  }\n}\n\nexport default MyAuthProvider;\n",
        "import React from \"react\";\n\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Filter,\n  SearchInput,\n  ImageField,\n} from \"react-admin\";\n\nexport default function siteList(props) {\n  const PostFilter = (props) => (\n    <Filter {...props}>\n      <SearchInput source=\"q\" alwaysOn />\n    </Filter>\n  );\n  return (\n    <List {...props} filters={<PostFilter />}>\n      <Datagrid>\n        <TextField source=\"sitename\" />\n        <TextField source=\"clusters\" />\n        <TextField source=\"tokens\" />\n      </Datagrid>\n    </List>\n  );\n}\n",
        "import React, { useState, useEffect } from \"react\";\nimport { Eclipse } from \"react-loading-io\";\nimport { getHeader } from \"../dataProvider/session\";\n//import { Show, SimpleShowLayout } from \"react-admin\";\n\n//const API_URL = \"https://allinonepush.live/api\";\nimport API_URL from \"../url\";\nimport { Redirect } from \"react-router\";\n\nexport default function SendNotification() {\n  //form datas\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [clusters, setClusters] = useState(1);\n\n  //data from api's\n  const [sites, setSites] = useState([]);\n  const [totalClusters, setTotalClusters] = useState(1);\n\n  const [checkedState, setCheckedState] = useState(\n    new Array(sites.length).fill(false)\n  );\n\n  //states for the ui\n  const [isLimitChangable, setIsLimitChangable] = useState(false);\n  const [isSiteSelectable, setIsSiteSelectable] = useState(false);\n  const [isIgnoreListChangable, setIsIgnoreListChangable] = useState(false);\n  const [subRoute, setSubRoute] = useState(\"\");\n\n  const [sitename, setSiteName] = useState(\"localhost\");\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n  };\n\n  useEffect(async () => {\n    const response = await fetch(`${API_URL}/admin/sites`, {\n      headers: getHeader(),\n    });\n    const body = await response.json();\n    let countClusters = 0;\n    console.log(body);\n    body.data.forEach((site) => {\n      countClusters += site.clusters;\n    });\n    setTotalClusters(countClusters);\n    setClusters(countClusters);\n    setSites(body.data);\n    setCheckedState(new Array(body.data.length).fill(false));\n  }, []);\n  if (subRoute === \"reports\") {\n    return <Redirect to=\"/Reports\" />;\n  }\n\n  if (subRoute === \"loading\") {\n    return (\n      <div className=\"center\">\n        <Eclipse size={300} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"container\" style={{ marginTop: 20 }}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          if (title == \"\" || body === \"\" || link == \"\") {\n            alert(\"Title, Body and Url must be provided\");\n            return;\n          }\n          setSubRoute(\"loading\");\n\n          const formData = new FormData();\n\n          const ignoreList = sites.reduce((current, { sitename }, index) => {\n            if (!checkedState[index]) {\n              return current;\n            }\n            return [...current, sitename];\n          }, []);\n\n          const obj = {\n            title: title,\n            body: body,\n            url: link,\n            icon: icon,\n            image: image,\n            clusters: clusters,\n            skipSites: ignoreList,\n          };\n\n          if (isSiteSelectable) {\n            obj.sitename = sitename;\n          }\n\n          var key;\n          for (key in obj) {\n            formData.append(key, obj[key]);\n          }\n\n          //send the notification to the server\n          console.log(\"sending....\");\n          fetch(API_URL + \"/admin/sendnotification\", {\n            headers: getHeader(\"multipart/form-data\"),\n            method: \"POST\",\n            body: formData,\n          }).then((response) => {\n            console.log(response);\n            response.json().then((body) => {\n              setSubRoute(\"reports\");\n              console.log(body);\n            });\n          });\n        }}\n      >\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Title:</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter Title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Body:</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter Body\"\n            value={body}\n            onChange={(e) => {\n              setBody(e.target.value);\n            }}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleInputEmail1\">Link:</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter Link\"\n            value={link}\n            onChange={(e) => {\n              setLink(e.target.value);\n            }}\n          />\n          <small id=\"emailHelp\" class=\"form-text text-muted\">\n            Note : Use http or Https\n          </small>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlFile1\">Icon:</label>\n          <input\n            type=\"file\"\n            class=\"form-control-file\"\n            id=\"exampleFormControlFile1\"\n            onChange={(e) => {\n              setIcon(e.target.files[0]);\n            }}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlFile1\">Image:</label>\n          <input\n            type=\"file\"\n            class=\"form-control-file\"\n            id=\"exampleFormControlFile1\"\n            onChange={(e) => {\n              setImage(e.target.files[0]);\n            }}\n          />\n        </div>\n        <div class=\"form-group\">\n          <label>Target Audience Filter:</label>\n          <br />\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"inlineCheckbox1\"\n              value=\"option1\"\n              checked={isLimitChangable}\n              onChange={(e) => {\n                console.log(\"changed\");\n                setIsLimitChangable(e.target.checked);\n              }}\n            />\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">\n              Limit\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"inlineCheckbox2\"\n              value=\"option2\"\n              checked={isSiteSelectable}\n              onChange={(e) => {\n                setIsSiteSelectable(e.target.checked);\n                if (!e.target.checked) {\n                  //if unchecked then set the total and clusters value to max\n                  let thetotalClusters = 0;\n                  sites.forEach((site) => {\n                    thetotalClusters += site.clusters;\n                  });\n                  setTotalClusters(thetotalClusters);\n                  setClusters(thetotalClusters);\n                } else {\n                  //if checked\n                  setTotalClusters(sites[0].clusters);\n                  setClusters(sites[0].clusters);\n                }\n              }}\n            />\n            <label class=\"form-check-label\" for=\"inlineCheckbox2\">\n              Site\n            </label>\n          </div>\n          <div class=\"form-check form-check-inline\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"inlineCheckbox1\"\n              value=\"option1\"\n              checked={isIgnoreListChangable}\n              onChange={(e) => {\n                console.log(\"changed\");\n                setIsIgnoreListChangable(e.target.checked);\n              }}\n            />\n            <label class=\"form-check-label\" for=\"inlineCheckbox1\">\n              Ignore Sites\n            </label>\n          </div>\n        </div>\n        {isLimitChangable && (\n          <div class=\"form-group\">\n            <label>Clusters: {clusters}</label>\n            <input\n              type=\"range\"\n              name=\"test\"\n              min=\"0\"\n              max={totalClusters}\n              value={clusters}\n              onChange={(e) => {\n                setClusters(e.target.value);\n              }}\n              style={{\n                width: totalClusters > 9 ? \"100%\" : \"auto\",\n                display: \"block\",\n              }}\n              class=\"slider\"\n              id=\"myRange\"\n            />\n          </div>\n        )}\n        {isSiteSelectable && (\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">Site select:</label>\n            <select\n              class=\"form-control\"\n              id=\"exampleFormControlSelect1\"\n              //value={sitename}\n              onChange={(e) => {\n                let findTheSite = {};\n                sites.forEach((site) => {\n                  if (site.sitename == e.target.value) {\n                    findTheSite = site;\n                  }\n                });\n\n                setTotalClusters(findTheSite.clusters);\n                setClusters(1);\n                setSiteName(e.target.value);\n              }}\n            >\n              {sites.map((site) => {\n                return <option>{site.sitename}</option>;\n              })}\n            </select>\n          </div>\n        )}\n\n        {isIgnoreListChangable && (\n          <div className=\"form-group\">\n            <label for=\"exampleFormControlSelect1\">Ignore Sites:</label>\n            {sites.map(({ sitename }, index) => {\n              return (\n                <div className=\"toppings-list-item\">\n                  <div className=\"left-section\">\n                    <input\n                      type=\"checkbox\"\n                      id={`custom-checkbox-${index}`}\n                      name={sitename}\n                      value={sitename}\n                      checked={checkedState[index]}\n                      onChange={() => handleOnChange(index)}\n                    />\n                    <label htmlFor={`custom-checkbox-${index}`}>\n                      {sitename}\n                    </label>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n        <button type=\"submit\" class=\"btn btn-primary\">\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n",
        "import React from \"react\";\n\nexport default function Integrate() {\n  return (\n    <div>\n      <div class=\"container-fluid\" style={{ paddingTop: 40 }}>\n        <h2>Instructions</h2>\n        <p>\n          To have the notification feature on any website, you just need to\n          enter these three lines of code before &lt;/body&gt; close{\" \"}\n        </p>\n        <code class=\"text-primary\">\n          &lt;script\n          src=\"https://www.gstatic.com/firebasejs/8.2.2/firebase-app.js\"&gt;&lt;/script&gt;\n        </code>\n        <br />\n        <code class=\"text-primary\">\n          &lt;script\n          src=\"https://www.gstatic.com/firebasejs/8.2.2/firebase-analytics.js\"&gt;&lt;/script&gt;\n        </code>\n        <br />\n        <code class=\"text-primary\">\n          &lt;script\n          src=\"https://www.gstatic.com/firebasejs/8.2.2/firebase-messaging.js\"&gt;&lt;/script&gt;\n        </code>\n        <br />\n        <code class=\"text-primary\">\n          &lt;script type=\"text/javascript\"\n          src=\"/integrate.js\"&gt;&lt;/script&gt;\n        </code>\n        <br />\n\n        <br />\n        <p>\n          Download this file And Place it in root folder{\" \"}\n          <a href=\"/firebase-messaging-sw.js\">Download</a>\n        </p>\n\n        <p>Put integrate.js in the root directory</p>\n        <p>\n          Download the integrate.js script from <a href=\"/integrate.js\">here</a>\n          .\n        </p>\n      </div>\n    </div>\n  );\n}\n",
        "import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getHeader } from \"./dataProvider/session\";\nimport API_URL from \"./url\";\n\nexport default function ChangePassword() {\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [buttonClicked, setButtonClicked] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  //const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    if (buttonClicked) {\n      console.log(\"buttonis clicked\");\n      let body = {};\n      body.oldPassword = oldPassword;\n      body.newPassword = password;\n\n      changePass(body);\n    }\n  }, [buttonClicked]);\n\n  async function changePass(body) {\n    let url = `${API_URL}/auth/changepassword`;\n\n    const response = await fetch(url, {\n      // headers: headers,\n      headers: getHeader(), //mode: \"no-cors\",\n      method: \"PATCH\",\n      body: JSON.stringify(body),\n    });\n\n    console.log(\"the header is :\", response.headers);\n    let resbody = await response.json();\n    console.log(\"the effing resbody is\", resbody);\n\n    if (resbody.err) {\n      setError(resbody.err);\n      setButtonClicked(false);\n    } else {\n      localStorage.clear();\n      return;\n    }\n  }\n\n  return (\n    //{loggedIn}\n    //{loggedIn || <Redirect to=\"/\" />}\n    <form\n      className=\"container mt-50\"\n      style={{\n        marginTop: \"50px\",\n      }}\n    >\n      {error === \"\" || (\n        <div class=\"alert alert-danger\">\n          <strong>Error!</strong> {error}\n        </div>\n      )}\n      <div class=\"form-group\">\n        <label for=\"usr\">Old Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"usr\"\n          required\n          value={oldPassword}\n          onChange={(e) => {\n            setOldPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"pwd\">New Password:</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          id=\"pwd\"\n          required\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <input\n          type=\"submit\"\n          value=\"Apply\"\n          class=\"btn btn-primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            setButtonClicked(true);\n          }}\n        />\n      </div>\n    </form>\n  );\n}\n",
        "import React, { useState, useEffect } from \"react\";\nimport {\n  Create,\n  FileInput,\n  SimpleForm,\n  TextInput,\n  FileField,\n  CheckboxGroupInput,\n} from \"react-admin\";\nimport API_URL from \"../url\";\nimport { getHeader } from \"../dataProvider/session\";\n\nexport default function CreateTemplate(props) {\n  const [sites, setSites] = useState([]);\n\n  useEffect(async () => {\n    const response = await fetch(`${API_URL}/admin/sites`, {\n      headers: getHeader(),\n    });\n    const body = await response.json();\n    body.data.forEach((d, index) => {\n      body.data[index].id = d.sitename;\n      body.data[index].name = d.sitename;\n    });\n    setSites(body.data);\n  }, []);\n\n  console.log(localStorage.getItem(\"currentUser\"));\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput source=\"title\" />\n        <TextInput source=\"body\" />\n        <TextInput source=\"url\" />\n        <CheckboxGroupInput source=\"skipSites\" choices={sites} />\n        <FileInput source=\"icon\" label=\"Select Icon\" accept=\"image/jpeg\">\n          <FileField source=\"src\" title=\"title\" />\n        </FileInput>\n        <FileInput source=\"image\" label=\"Select Image\" accept=\"image/jpeg\">\n          <FileField source=\"src\" title=\"title\" />\n        </FileInput>\n      </SimpleForm>\n    </Create>\n  );\n}\n",
        "//importing librarys and components\nimport { Link } from \"react-router-dom\";\nimport { Title } from \"react-admin\";\n\n//importing material-ui components\nimport TextField from \"@material-ui/core/TextField\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\n//importing constants\nimport API_URL from \"../url\";\nimport { getHeader } from \"../dataProvider/session.js\";\n\n//main function\nfunction Schedule() {\n  //hooks\n\n  //state hooks\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [interval, setTheInterval] = useState(\"\");\n  const [submitted, setSubmitted] = useState(false);\n\n  //use effect hooks\n  useEffect(() => {\n    async function getStuffs() {\n      const response = await fetch(`${API_URL}/admin/schedule`, {\n        headers: getHeader(),\n      });\n      const resBody = await response.json();\n      setFrom(resBody.from);\n      setTo(resBody.to);\n      setTheInterval(resBody.interval);\n    }\n    getStuffs();\n  }, []);\n\n  //conditional return\n  return (\n    <>\n      <Title title=\"Schedule\" />\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <TextField\n          id=\"standard-basic\"\n          variant=\"filled\"\n          disabled={submitted}\n          label=\"From (in hours)\"\n          value={from}\n          onChange={(e) => setFrom(e.target.value)}\n        />\n        <br />\n        <br />\n        <TextField\n          id=\"standard-basic\"\n          variant=\"filled\"\n          disabled={submitted}\n          label=\"To (in hours)\"\n          value={to}\n          onChange={(e) => setTo(e.target.value)}\n        />\n        <br />\n        <br />\n        <TextField\n          id=\"standard-basic\"\n          variant=\"filled\"\n          disabled={submitted}\n          label=\"Interval (in minutes)\"\n          value={interval}\n          onChange={(e) => setTheInterval(e.target.value)}\n        />\n        <br />\n        <br />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={submitted}\n          onClick={async () => {\n            setSubmitted(true);\n            await fetch(`${API_URL}/admin/schedule`, {\n              method: \"PATCH\",\n              headers: getHeader(),\n              body: JSON.stringify({\n                from: Number(from),\n                to: Number(to),\n                interval: Number(interval),\n              }),\n            });\n            setSubmitted(false);\n          }}\n        >\n          Update\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default Schedule;\n",
        "import { Admin, Resource } from \"react-admin\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport API_URL from \"./url\";\n\n//importing components\nimport Dashboard from \"./dashboard\";\nimport ReportList from \"./lists/reports\";\nimport TemplateList from \"./lists/templates\";\n\n//importing icons\nimport WebIcon from \"@mui/icons-material/Web\";\nimport MoreTimeIcon from \"@mui/icons-material/MoreTime\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport RepeatOneOnIcon from \"@mui/icons-material/RepeatOneOn\";\nimport NotificationsActiveIcon from \"@mui/icons-material/NotificationsActive\";\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\nimport ExtensionIcon from \"@mui/icons-material/Extension\";\n\n//importing functions and objects\nimport custmDataProvider from \"./dataProvider/index\";\nimport MyAuthProvider from \"./authProvider/index\";\nimport siteList from \"./lists/sites\";\nimport SendNotification from \"./sendNotification\";\nimport Integrate from \"./integrate\";\nimport ChangePassword from \"./changePassword\";\nimport CreateTemplate from \"./creates/createTemplate\";\nimport Schedule from \"./lists/schedule\";\n\nlet dp = new custmDataProvider(API_URL);\n//\"https://ingame-item-topup-api.herokuapp.com/api\"\n//\"http://localhost:80/api\"\n//\"http://localhost:8000/api\"\n//\"https://allinonepush.live/api\"\nconsole.log(dp.getList());\nlet myap = new MyAuthProvider(\n  //\"https://ingame-item-topup-api.herokuapp.com/api\"\n  //\"http://localhost:8000/api\"\n  //\"https://allinonepush.live/api\"\n  API_URL\n);\n\nfunction App() {\n  return (\n    <Admin dataProvider={dp} authProvider={myap} dashboard={Dashboard}>\n      <Resource name=\"Sites\" list={siteList} icon={WebIcon} />\n      <Resource name=\"Reports\" list={ReportList} icon={AssessmentIcon} />\n      <Resource\n        name=\"Templates\"\n        list={TemplateList}\n        create={CreateTemplate}\n        icon={ExtensionIcon}\n      />\n      <Resource\n        name=\"Send Notification\"\n        list={SendNotification}\n        icon={NotificationsActiveIcon}\n      />\n      <Resource name=\"Schedule\" list={Schedule} icon={MoreTimeIcon} />\n      <Resource\n        name=\"How To Integrate\"\n        list={Integrate}\n        icon={RepeatOneOnIcon}\n      />\n      <Resource name=\"Accounts\" list={ChangePassword} icon={AccountBoxIcon} />\n    </Admin>\n  );\n}\n\nexport default App;\n",
        "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    ],
    "sourceRoot": ""
}